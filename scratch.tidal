

d1 
  $ someCyclesBy 0.4 (const $ s "~")
  $ (|* gain 1.2)
  $ (|+ nudge (range 1 2 $ slow 4 sine)) 
  $ note "2*16" 
  # s "midi" 
  # cps 0.666

d2
  $ fast 1.21
  $ (1001 <~)
  $ someCyclesBy 0.4 (const $ s "~")
  $ (|* gain 1.2)
  $ (|+ nudge (range 1 2 $ slow 4 sine)) 
  $ note "1*16" 
  # s "midi"   

d3
  $ fast 1.31
  $ (2010 <~)
  $ someCyclesBy 0.4 (const $ s "~")
  $ (|* gain 1.2)
  $ (|+ nudge (range 0.5 2 $ slow 8 sine)) 
  $ note "0*16" 
  # s "midi" 

  hush

  setcps (160/120/2)

  d1 $ slow 2 $ (|+ note "-24") $ pan "0" # note (scale "ritusen" "{0 3 1 -1 -2 4}%13") # midichan 1 # s "midi" # legato 0.8

  d2 
    $ slow 2 $ (|+ note "-24") 
    $ pan "1(<3 2>,8, <0 3 5>)" # note (scale "ritusen" "{0 -1 3 5 8 6}%17") # midichan 0 # s "midi" # legato 0.8

do
  let pat = "1(<3 9 7 5 11>,16,<0 2 5>)"
  d3 
    $ degradeBy 0.4
    $ shift
    $ sometimes (# midichan 3) 
    $ struct pat $ midichan 2 # s "midi" # gain 1.2 # note "-24"  
  d4 $ degradeBy 0.4 $ shift $ struct (inv pat) $ midichan 8 # note "-24" # s "midi" # gain 1.2

    hush


do
  let pat = someCyclesBy 0.1 (slow 2) $ shift' 331 $ sometimes roll $ shift' 189 $ "1(<3 7 5 9>,16,<0 1>)" :: Pattern Bool
  d1 
    $ degradeBy 0.2
    $ shift' 3
    $ whenmod 16 13 (iter 8)
    $ foldEvery [3,4] (1.75 ~>)
    $ (|+ note (discretise (1/2) $ shift' 2829 $ choose [0,1,2,3]))
    $ stack [ 
    struct pat $ note 0
    , struct pat $ note 8
    , sometimes roll $ shift $ note 4 
    ] # s "midi" # midichan 15 # gain 1.2

    hush

setcps (160/120/2)


do
  let pat = (whenmod 10 5 palindrome $ slow (discretise (1/2) $ shift' 82 $ choose [1,2]) $ "1(<3 9 7 5 11>,16,<0 3 8>)") :: Pattern Bool
  d1 
    $ whenmod 16 10 move
    $ shift' 27
    $ whenmod 10 5 rev
    $ sometimesBy 0.2 (randDelay)
    $ shift' 2388
    $ sometimesBy 0.1 (stutWith (shift' 8 $ choose [2,3]) (0.125) (|* speed 1.5))
    $ (|+ n (discretise (shift' 2892 $ choose [(1/2),(1/3),(1/4)]) $ shift' 234 $ choose [0,1,2,3,4,5]))
    $ stack [ 
      struct pat $ s "synth1" # cut 1 # gain 0.9 # n 0
      , struct pat $ s "k1" # cut 2 # n 0
      , sometimes roll' $ shift' 234 $ sometimes roll $ shift' 707 $ rarely (stutWith 8 (1/16) (|* gain 0.93)) $ s "s1" # n 0
    ]

    hush